"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

# import accounts.serializers

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG")

FRONTEND_URL = os.environ.get('FRONTEND_URL')

AUTH_USER_MODEL = "users.User"

ALLOWED_HOSTS = [
    "frontend",
    "localhost",
    "127.0.0.1",
]
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://127.0.0.1",
    "http://localhost",
    "http://nginx:80",
    "http://nginx"
]
# CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://127.0.0.1",
    "http://localhost",
    "http://nginx:80",
    "http://nginx"
]
CSRF_COOKIE_HTTPONLY = False
SESSION_COOKIE_HTTPONLY = False
SESSION_COOKIE_SECURE = False

# CORS_ALLOW_HEADERS = [
#     'xsrfheadername',
#     'xsrfcookiename',
#     'content-type',
#     'x-csrftoken',
#     'X-CSRFTOKEN',
# ]

CORS_ALLOW_CREDENTIALS = True

# Application definition

INSTALLED_APPS = [


    "simpleui",
    'corsheaders',

    "fluent_comments",
    'threadedcomments',
    "django_comments",

    "rest_framework",
    "rest_framework.authtoken",
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    "dj_rest_auth",
    "dj_rest_auth.registration",


    # "rest_auth",
    "taggit",
    "common",
    "users",
    "accounts",

    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",


    # 'rest_auth.registration',
]
SITE_ID = 1
ACCOUNT_AUTHENTICATION_METHOD="email"
# ACCOUNT_EMAIL_VERIFICATION='mandatory' # Must verify email
ACCOUNT_EMAIL_REQUIRED = True # Must have email
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
LOGIN_REDIRECT_URL = "/"
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    "django.contrib.auth.backends.ModelBackend",
    'allauth.account.auth_backends.AuthenticationBackend',
]
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    # "allauth.account.middleware.AccountMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates_",],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}
REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",#"rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_AUTHENTICATION_CLASSES": [
        'rest_framework.authentication.TokenAuthentication',
        # "rest_framework.authentication.SessionAuthentication",
        # "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
        # "rest_framework.permissions.AllowAny",
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        # 'rest_framework.renderers.BrowsableAPIRenderer',
    ]

}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

STATICFILES_DIRS = (Path(BASE_DIR) / 'static',)
STATIC_ROOT = Path(BASE_DIR) / "staticfiles"
MEDIA_ROOT = Path(BASE_DIR) / 'mediafiles'

MEDIA_URL = "/media/" # the base url for media files
DEFAULT_IMAGE_FOLDER = Path(MEDIA_ROOT) / "default"

DEFAULT_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"
STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"



SIMPLEUI_ICON = {
    'Posts':'fa-sharp fa-solid fa-envelopes-bulk',
    'User infos':'fa-solid fa-address-card',
    'Site infos':"fa-solid fa-circle-info",
    'Messages':"fa-regular fa-message",
    "Email addresses":"fa-solid fa-at",
    'Sites':'fa-solid fa-bars',
    'Social accounts':'fa-solid fa-hashtag',
    'Social Accounts':'fa-solid fa-hashtag',
    'Accounts':'fa-regular fa-user',
}

COMMENTS_APP = "fluent_comments"
FLUENT_COMMENTS_EXCLUDE_FIELDS = ('name','email','url','title',)

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
EMAIL_PORT = 587
EMAIL_USE_TLS = True

ACCOUNT_ADAPTER="accounts.adapters.MyAccountAdapter"
EMAIL_CONFIRM_REDIRECT_BASE_URL=FRONTEND_URL + "email-confirm"
PASSWORD_RESET_CONFIRM_REDIRECT_BASE_URL=FRONTEND_URL+"/accounts/password-reset/confirm"
REST_AUTH={
    'PASSWORD_RESET_SERIALIZER':"accounts.serializers.MyPasswordResetSerializer",
}